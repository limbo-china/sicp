#lang racket
;; 2.24
(list 1(list 2(list 3 4))) 
;; 2.25
(display "---------------")
(newline)
(define list1 (list 1 3 (list 5 7) 9))
(display list1)
(newline)
(car(cdr(car(cdr(cdr list1)))))
(display "---------------")
(newline)
(define list2 (list (list 7)))
(display list2)
(newline)
(car(car list2))
(display "---------------")
(newline)
(define list3 (list 1(list 2(list 3(list 4(list 5(list 6 7)))))))
(display list3)
(newline)
(car(cdr(car(cdr(car(cdr(car(cdr(car(cdr(car(cdr list3))))))))))))
;; 2.26
(display "---------------")
(newline)
(define x (list 1 2 3))
(define y (list 4 5 6))
(append x y)
(cons x y)
(list x y)