#lang racket
;;;make interval
(define (make-interval a b)(cons a b))
;;;lower and upper bound
(define (lower-bound x)(car x))
(define (upper-bound x)(cdr x))
;;;multi interval
(define (mul-interval x y)
  (let((p1(*(lower-bound x)(lower-bound y)))
       (p2(*(lower-bound x)(upper-bound y)))
       (p3(*(upper-bound x)(lower-bound y)))
       (p4(*(upper-bound x)(upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))
;;;div interval
(define (div-interval x y)
  (make-interval (-(lower-bound x)(upper-bound y))
                 (-(upper-bound x)(lower-bound y))))